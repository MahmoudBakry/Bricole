{"version":3,"sources":["../../src/routes/user.route.js"],"names":["requireSignIn","passport","authenticate","session","requireAuth","router","express","Router","route","post","single","UserController","validateBody","signUp","signin","get","BricolerController","fetchAllBricoler","retriveUserDetails","put","array","validateCompleteProfileBody","completeProfile","fetchAllBricolOfOneUser","retriveAllBricolsBtCityOfUser","countNumberOfBricolsOfUser","fetchRequestOfOneBricoler","retriveAllBricolsBtCityOfBricoler","fetchAllBricolOfOneBricoler","countNumberOfBricolsOfBricoler","HistoryController","retriveHistoryOfBricoler","retriveHistoryOfUser"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,gBAAgBC,mBAASC,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAA/B,CAAtB;AACA,IAAMC,cAAcH,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAApB;AACA,IAAME,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,SAAb,EACKC,IADL,CAEI,0BAAa,OAAb,EAAsBC,MAAtB,CAA6B,KAA7B,CAFJ,EAGIC,eAAeC,YAAf,EAHJ,EAIID,eAAeE,MAJnB;;AAOAR,OAAOI,IAAP,CAAY,SAAZ,EAAuBT,aAAvB,EAAsCW,eAAeG,MAArD;;AAEAT,OAAOG,KAAP,CAAa,YAAb,EACKO,GADL,CACSX,WADT,EACsBY,mBAAmBC,gBADzC;;AAGAZ,OAAOG,KAAP,CAAa,gBAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAeO,kBADrC;;AAGAb,OAAOG,KAAP,CAAa,iCAAb,EACKW,GADL,CACSf,WADT,EAEI,0BAAa,OAAb,EAAsBgB,KAAtB,CAA4B,YAA5B,CAFJ,EAGIT,eAAeU,2BAAf,EAHJ,EAIIV,eAAeW,eAJnB;;AAOAjB,OAAOG,KAAP,CAAa,wBAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAeY,uBADrC;;AAGAlB,OAAOG,KAAP,CAAa,gCAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAea,6BADrC;;AAGAnB,OAAOG,KAAP,CAAa,mCAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAec,0BADrC;;AAGA;AACApB,OAAOG,KAAP,CAAa,yCAAb,EACKO,GADL,CACSX,WADT,EACsBY,mBAAmBU,yBADzC;;AAGArB,OAAOG,KAAP,CAAa,wCAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAegB,iCADrC;;AAGAtB,OAAOG,KAAP,CAAa,gCAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAeiB,2BADrC;;AAGAvB,OAAOG,KAAP,CAAa,2CAAb,EACKO,GADL,CACSX,WADT,EACsBO,eAAekB,8BADrC;;AAGA;AACAxB,OAAOG,KAAP,CAAa,gCAAb,EACKO,GADL,CACSX,WADT,EACsB0B,kBAAkBC,wBADxC;;AAGA1B,OAAOG,KAAP,CAAa,wBAAb,EACKO,GADL,CACSX,WADT,EACsB0B,kBAAkBE,oBADxC;;kBAGe3B,M","file":"user.route.js","sourcesContent":["import UserController from '../controllers/user.controller';\nimport BricolerController from '../controllers/bricoler/bricoler.controller';\nimport HistoryController from '../controllers/history.controller';\nimport express from 'express';\nimport passport from 'passport';\nimport passportService from '../services/passport';\nimport { multerSaveTo } from '../services/multer'\nconst requireSignIn = passport.authenticate('local', { session: false });\nconst requireAuth = passport.authenticate('jwt', { session: false });\nconst router = express.Router();\n\nrouter.route('/signup')\n    .post(\n    multerSaveTo('users').single('img'),\n    UserController.validateBody(),\n    UserController.signUp\n    )\n\nrouter.post(\"/signin\", requireSignIn, UserController.signin)\n\nrouter.route('/bricolers', )\n    .get(requireAuth, BricolerController.fetchAllBricoler)\n\nrouter.route('/users/:userId')\n    .get(requireAuth, UserController.retriveUserDetails)\n\nrouter.route('/users/:userId/complete-profile')\n    .put(requireAuth,\n    multerSaveTo('users').array('portofolio'),\n    UserController.validateCompleteProfileBody(),\n    UserController.completeProfile)\n\n\nrouter.route('/users/:userId/bricols')\n    .get(requireAuth, UserController.fetchAllBricolOfOneUser)\n\nrouter.route('/users/:userId/bricols-bt-city')\n    .get(requireAuth, UserController.retriveAllBricolsBtCityOfUser)\n\nrouter.route('/users/:userId/bricols-statistics')\n    .get(requireAuth, UserController.countNumberOfBricolsOfUser)\n\n//requests\nrouter.route('/bricolers/:bricolerId/special-requests')\n    .get(requireAuth, BricolerController.fetchRequestOfOneBricoler)\n\nrouter.route('/bricolers/:bricolerId/bricols-bt-city')\n    .get(requireAuth, UserController.retriveAllBricolsBtCityOfBricoler)\n\nrouter.route('/bricolers/:bricolerId/bricols')\n    .get(requireAuth, UserController.fetchAllBricolOfOneBricoler)\n\nrouter.route('/bricolers/:bricolerId/bricols-statistics')\n    .get(requireAuth, UserController.countNumberOfBricolsOfBricoler)\n\n//history\nrouter.route('/bricolers/:bricolerId/history')\n    .get(requireAuth, HistoryController.retriveHistoryOfBricoler)\n\nrouter.route('/users/:userId/history')\n    .get(requireAuth, HistoryController.retriveHistoryOfUser)\n\nexport default router;\n\n\n"]}