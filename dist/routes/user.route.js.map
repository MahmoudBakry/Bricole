{"version":3,"sources":["../../src/routes/user.route.js"],"names":["requireSignIn","passport","authenticate","session","requireAuth","router","express","Router","use","pushRoute","route","post","single","UserController","validateBody","signUp","signin","get","BricolerController","fetchAllBricoler","retriveUserDetails","put","array","validateCompleteProfileBody","completeProfile","fetchAllBricolOfOneUser","retriveAllBricolsBtCityOfUser","countNumberOfBricolsOfUser","FavouriteController","addFavouriteToMyList","retriveAllFavouriteBricolersOfOneUser","fetchRequestOfOneBricoler","retriveAllBricolsBtCityOfBricoler","fetchAllBricolOfOneBricoler","countNumberOfBricolsOfBricoler","HistoryController","retriveHistoryOfBricoler","retriveHistoryOfUser","TripBtCityController","createNewTrip","fetchAllTripsBtCities","fetchAllTripsForOneBricoler","NotificationController","retriveAllNotification"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,gBAAgBC,mBAASC,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAA/B,CAAtB;AACA,IAAMC,cAAcH,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAApB;AACA,IAAME,SAASC,kBAAQC,MAAR,EAAf;;AAEA;AACAF,OAAOG,GAAP,CAAWC,0BAAX;;AAEAJ,OAAOK,KAAP,CAAa,SAAb,EACKC,IADL,CAEI,0BAAa,OAAb,EAAsBC,MAAtB,CAA6B,KAA7B,CAFJ,EAGIC,eAAeC,YAAf,EAHJ,EAIID,eAAeE,MAJnB;;AAOAV,OAAOM,IAAP,CAAY,SAAZ,EAAuBX,aAAvB,EAAsCa,eAAeG,MAArD;;AAEAX,OAAOK,KAAP,CAAa,YAAb,EACKO,GADL,CACSb,WADT,EACsBc,mBAAmBC,gBADzC;;AAGAd,OAAOK,KAAP,CAAa,gBAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAeO,kBADrC;;AAGAf,OAAOK,KAAP,CAAa,iCAAb,EACKW,GADL,CACSjB,WADT,EAEI,0BAAa,OAAb,EAAsBkB,KAAtB,CAA4B,YAA5B,CAFJ,EAGIT,eAAeU,2BAAf,EAHJ,EAIIV,eAAeW,eAJnB;;AAOAnB,OAAOK,KAAP,CAAa,wBAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAeY,uBADrC;;AAGApB,OAAOK,KAAP,CAAa,gCAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAea,6BADrC;;AAGArB,OAAOK,KAAP,CAAa,mCAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAec,0BADrC;;AAGA;AACAtB,OAAOK,KAAP,CAAa,2BAAb,EACKC,IADL,CACUP,WADV,EACuBwB,oBAAoBC,oBAD3C,EAEKZ,GAFL,CAESb,WAFT,EAEsBwB,oBAAoBE,qCAF1C;;AAIA;AACAzB,OAAOK,KAAP,CAAa,yCAAb,EACKO,GADL,CACSb,WADT,EACsBc,mBAAmBa,yBADzC;;AAGA1B,OAAOK,KAAP,CAAa,wCAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAemB,iCADrC;;AAGA3B,OAAOK,KAAP,CAAa,gCAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAeoB,2BADrC;;AAGA5B,OAAOK,KAAP,CAAa,2CAAb,EACKO,GADL,CACSb,WADT,EACsBS,eAAeqB,8BADrC;;AAGA;AACA7B,OAAOK,KAAP,CAAa,gCAAb,EACKO,GADL,CACSb,WADT,EACsB+B,kBAAkBC,wBADxC;;AAGA/B,OAAOK,KAAP,CAAa,wBAAb,EACKO,GADL,CACSb,WADT,EACsB+B,kBAAkBE,oBADxC;;AAGA;AACAhC,OAAOK,KAAP,CAAa,qCAAb,EACKC,IADL,CACUP,WADV,EAEI,0BAAa,MAAb,EAAqBkB,KAArB,CAA2B,MAA3B,CAFJ,EAGIgB,eAAqBxB,YAArB,EAHJ,EAIIwB,eAAqBC,aAJzB,EAKKtB,GALL,CAKSb,WALT,EAKsBkC,eAAqBE,qBAL3C;;AAOAnC,OAAOK,KAAP,CAAa,wCAAb,EACKO,GADL,CACSb,WADT,EACsBkC,eAAqBG,2BAD3C;;AAGA;AACApC,OAAOK,KAAP,CAAa,6BAAb,EACKO,GADL,CACSb,WADT,EACsBsC,uBAAuBC,sBAD7C;;kBAIetC,M","file":"user.route.js","sourcesContent":["import UserController from '../controllers/user.controller';\nimport BricolerController from '../controllers/bricoler/bricoler.controller';\nimport HistoryController from '../controllers/history.controller';\nimport TripBtCityController from '../controllers/bricoler-bt-citty/trip.controller';\nimport FavouriteController from '../controllers/favourite/favourite.controller';\nimport NotificationController from '../controllers/notification.controller';\n\nimport pushRoute from \"./push-notification.route\";\nimport express from 'express';\nimport passport from 'passport';\nimport passportService from '../services/passport';\nimport { multerSaveTo } from '../services/multer'\nconst requireSignIn = passport.authenticate('local', { session: false });\nconst requireAuth = passport.authenticate('jwt', { session: false });\nconst router = express.Router();\n\n//notifications routes\nrouter.use(pushRoute);\n\nrouter.route('/signup')\n    .post(\n    multerSaveTo('users').single('img'),\n    UserController.validateBody(),\n    UserController.signUp\n    )\n\nrouter.post(\"/signin\", requireSignIn, UserController.signin)\n\nrouter.route('/bricolers', )\n    .get(requireAuth, BricolerController.fetchAllBricoler)\n\nrouter.route('/users/:userId')\n    .get(requireAuth, UserController.retriveUserDetails)\n\nrouter.route('/users/:userId/complete-profile')\n    .put(requireAuth,\n    multerSaveTo('users').array('portofolio'),\n    UserController.validateCompleteProfileBody(),\n    UserController.completeProfile)\n\n\nrouter.route('/users/:userId/bricols')\n    .get(requireAuth, UserController.fetchAllBricolOfOneUser)\n\nrouter.route('/users/:userId/bricols-bt-city')\n    .get(requireAuth, UserController.retriveAllBricolsBtCityOfUser)\n\nrouter.route('/users/:userId/bricols-statistics')\n    .get(requireAuth, UserController.countNumberOfBricolsOfUser)\n\n//favourite routes \nrouter.route('/users/:userId/favourites')\n    .post(requireAuth, FavouriteController.addFavouriteToMyList)\n    .get(requireAuth, FavouriteController.retriveAllFavouriteBricolersOfOneUser)\n\n//requests\nrouter.route('/bricolers/:bricolerId/special-requests')\n    .get(requireAuth, BricolerController.fetchRequestOfOneBricoler)\n\nrouter.route('/bricolers/:bricolerId/bricols-bt-city')\n    .get(requireAuth, UserController.retriveAllBricolsBtCityOfBricoler)\n\nrouter.route('/bricolers/:bricolerId/bricols')\n    .get(requireAuth, UserController.fetchAllBricolOfOneBricoler)\n\nrouter.route('/bricolers/:bricolerId/bricols-statistics')\n    .get(requireAuth, UserController.countNumberOfBricolsOfBricoler)\n\n//history\nrouter.route('/bricolers/:bricolerId/history')\n    .get(requireAuth, HistoryController.retriveHistoryOfBricoler)\n\nrouter.route('/users/:userId/history')\n    .get(requireAuth, HistoryController.retriveHistoryOfUser)\n\n//trip routes \nrouter.route('/bricolers/:bricolerId/trip-bt-city')\n    .post(requireAuth,\n    multerSaveTo('trip').array('imgs'),\n    TripBtCityController.validateBody(),\n    TripBtCityController.createNewTrip)\n    .get(requireAuth, TripBtCityController.fetchAllTripsBtCities)\n\nrouter.route('/bricolers/:bricolerId/my-trip-bt-city')\n    .get(requireAuth, TripBtCityController.fetchAllTripsForOneBricoler)\n\n//notification routes \nrouter.route(\"/users/:userId/notification\")\n    .get(requireAuth, NotificationController.retriveAllNotification)\n\n\nexport default router;\n\n\n"]}