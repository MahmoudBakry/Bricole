{"version":3,"sources":["../../src/controllers/history.controller.js"],"names":["retriveHistoryOfBricoler","req","res","next","limit","parseInt","query","page","bricolerId","params","User","findById","userDetails","status","end","serviceype","serviceType","bricoler","History","find","populate","skip","sort","creationDate","allDoc","count","send","ApiResponse","Math","ceil","retriveHistoryOfUser","userId","user"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;kBAEe;AACX;AACMA,4BAFK,oCAEoBC,GAFpB,EAEyBC,GAFzB,EAE8BC,IAF9B,EAEoC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjCC,iCAHiC,GAGzBC,SAASJ,IAAIK,KAAJ,CAAUF,KAAnB,KAA6B,EAHJ;AAIjCG,gCAJiC,GAI1BN,IAAIK,KAAJ,CAAUC,IAAV,IAAkB,CAJQ;AAMnCC,sCANmC,GAMtBP,IAAIQ,MAAJ,CAAWD,UANW;AAAA;AAAA,mCAOfE,eAAKC,QAAL,CAAcH,UAAd,CAPe;;AAAA;AAOnCI,uCAPmC;;AAAA,gCASlCA,WATkC;AAAA;AAAA;AAAA;;AAAA,6DAU5BV,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAV4B;;AAAA;AAWnCR,iCAXmC,GAW3B,EAX2B;;AAYvC,gCAAIL,IAAIK,KAAJ,CAAUO,MAAd,EACIP,MAAMO,MAAN,GAAeZ,IAAIK,KAAJ,CAAUO,MAAzB;AACJ,gCAAIZ,IAAIK,KAAJ,CAAUS,UAAd,EACIT,MAAMU,WAAN,GAAoBf,IAAIK,KAAJ,CAAUS,UAA9B;AACJT,kCAAMW,QAAN,GAAiBT,UAAjB;AAhBuC;AAAA,mCAiBpBU,kBAAQC,IAAR,CAAab,KAAb,EACdc,QADc,CACL,SADK,EAEdA,QAFc,CAEL,UAFK,EAGdA,QAHc,CAGL,MAHK,EAIdC,IAJc,CAIT,CAACd,OAAO,CAAR,IAAaH,KAJJ,EAKdA,KALc,CAKRA,KALQ,EAKDkB,IALC,CAKI,EAAEC,cAAc,CAAC,CAAjB,EALJ,CAjBoB;;AAAA;AAiBnCC,kCAjBmC;AAAA;AAAA,mCAwBrBN,kBAAQO,KAAR,CAAcnB,KAAd,CAxBqB;;AAAA;AAwBnCmB,iCAxBmC;AAAA,6DAyBhCvB,IAAIwB,IAAJ,CAAS,IAAIC,qBAAJ,CACZH,MADY,EAEZjB,IAFY,EAGZqB,KAAKC,IAAL,CAAUJ,QAAQrB,KAAlB,CAHY,EAIZA,KAJY,EAKZqB,KALY,EAMZxB,GANY,CAAT,CAzBgC;;AAAA;AAAA;AAAA;;AAoCvCE;;AApCuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsC9C,KAxCU;;;AA0CX;AACM2B,wBA3CK,gCA2CgB7B,GA3ChB,EA2CqBC,GA3CrB,EA2C0BC,IA3C1B,EA2CgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7BC,iCAH6B,GAGrBC,SAASJ,IAAIK,KAAJ,CAAUF,KAAnB,KAA6B,EAHR;AAI7BG,gCAJ6B,GAItBN,IAAIK,KAAJ,CAAUC,IAAV,IAAkB,CAJI;AAM/BwB,kCAN+B,GAMtB9B,IAAIQ,MAAJ,CAAWsB,MANW;AAAA;AAAA,mCAOXrB,eAAKC,QAAL,CAAcoB,MAAd,CAPW;;AAAA;AAO/BnB,uCAP+B;;AAAA,gCAQ9BA,WAR8B;AAAA;AAAA;AAAA;;AAAA,8DASxBV,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EATwB;;AAAA;AAU/BR,iCAV+B,GAUvB,EAVuB;;AAWnC,gCAAIL,IAAIK,KAAJ,CAAUO,MAAd,EACIP,MAAMO,MAAN,GAAeZ,IAAIK,KAAJ,CAAUO,MAAzB;AACJ,gCAAIZ,IAAIK,KAAJ,CAAUS,UAAd,EACIT,MAAMU,WAAN,GAAoBf,IAAIK,KAAJ,CAAUS,UAA9B;AACJT,kCAAM0B,IAAN,GAAaD,MAAb;AAfmC;AAAA,mCAgBhBb,kBAAQC,IAAR,CAAab,KAAb,EACdc,QADc,CACL,SADK,EAEdA,QAFc,CAEL,UAFK,EAGdA,QAHc,CAGL,MAHK,EAIdC,IAJc,CAIT,CAACd,OAAO,CAAR,IAAaH,KAJJ,EAKdA,KALc,CAKRA,KALQ,EAKDkB,IALC,CAKI,EAAEC,cAAc,CAAC,CAAjB,EALJ,CAhBgB;;AAAA;AAgB/BC,kCAhB+B;AAAA;AAAA,mCAuBjBN,kBAAQO,KAAR,CAAcnB,KAAd,CAvBiB;;AAAA;AAuB/BmB,iCAvB+B;AAAA,8DAwB5BvB,IAAIwB,IAAJ,CAAS,IAAIC,qBAAJ,CACZH,MADY,EAEZjB,IAFY,EAGZqB,KAAKC,IAAL,CAAUJ,QAAQrB,KAAlB,CAHY,EAIZA,KAJY,EAKZqB,KALY,EAMZxB,GANY,CAAT,CAxB4B;;AAAA;AAAA;AAAA;;AAkCnCE;;AAlCmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoC1C;AA/EU,C","file":"history.controller.js","sourcesContent":["import History from '../models/history.model';\nimport User from '../models/user.model';\nimport mongoose from 'mongoose';\nimport ApiResponse from '../helpers/ApiResponse';\nimport ApiError from '../helpers/ApiError';\n\nexport default {\n    //retrive all bricoler (provider) history \n    async retriveHistoryOfBricoler(req, res, next) {\n        try {\n\n            const limit = parseInt(req.query.limit) || 20;\n            const page = req.query.page || 1;\n\n            let bricolerId = req.params.bricolerId;\n            let userDetails = await User.findById(bricolerId);\n\n            if (!userDetails)\n                return res.status(404).end();\n            let query = {}\n            if (req.query.status)\n                query.status = req.query.status;\n            if (req.query.serviceype)\n                query.serviceType = req.query.serviceype;\n            query.bricoler = bricolerId;\n            let allDoc = await History.find(query)\n                .populate('service')\n                .populate('bricoler')\n                .populate('user')\n                .skip((page - 1) * limit)\n                .limit(limit).sort({ creationDate: -1 })\n\n            let count = await History.count(query);\n            return res.send(new ApiResponse(\n                allDoc,\n                page,\n                Math.ceil(count / limit),\n                limit,\n                count,\n                req\n            ))\n\n\n        } catch (err) {\n            next(err)\n        }\n    },\n\n    //retrive all user (client) history \n    async retriveHistoryOfUser(req, res, next) {\n        try {\n\n            const limit = parseInt(req.query.limit) || 20;\n            const page = req.query.page || 1;\n\n            let userId = req.params.userId;\n            let userDetails = await User.findById(userId);\n            if (!userDetails)\n                return res.status(404).end();\n            let query = {}\n            if (req.query.status)\n                query.status = req.query.status;\n            if (req.query.serviceype)\n                query.serviceType = req.query.serviceype;\n            query.user = userId;\n            let allDoc = await History.find(query)\n                .populate('service')\n                .populate('bricoler')\n                .populate('user')\n                .skip((page - 1) * limit)\n                .limit(limit).sort({ creationDate: -1 })\n\n            let count = await History.count(query);\n            return res.send(new ApiResponse(\n                allDoc,\n                page,\n                Math.ceil(count / limit),\n                limit,\n                count,\n                req\n            ))\n\n        } catch (err) {\n            next(err)\n        }\n    }\n}\n\n\n"]}