{"version":3,"sources":["../../src/controllers/push-notifications.controller.js"],"names":["_","subscribe","req","res","next","user","User","findById","id","token","body","ApiError","pushTokens","push","save","newUser","console","log","length","status","end","update","oldToken","newToken","includes","tokens","without","result","Object","values","unsubscribe"],"mappings":"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","file":"push-notifications.controller.js","sourcesContent":["\nimport User from \"../models/user.model\";\nimport * as _ from \"lodash\";\nimport ApiError from '../helpers/ApiError';\n\nexport default {\n\n\n    async subscribe(req, res, next) {\n\n        let user = req.user;\n        user = await User.findById(user.id);\n\n        let token = req.body.token;\n\n        if (!token)\n            return next(new ApiError(422, \"token is required\"));\n\n        user.pushTokens.push(token);\n\n        await user.save();\n\n        //test \n        let newUser = await User.findById(user.id)\n        console.log(newUser.pushTokens)\n        console.log(newUser.pushTokens.length)\n\n        res.status(204).end();\n\n    },\n\n    async update(req, res, next) {\n        try {\n            let user = req.user;\n            user = await User.findById(user.id);\n\n            let oldToken = req.body.oldToken;\n            let newToken = req.body.newToken;\n\n            if (!oldToken)\n                return next(new ApiError(422, \"oldToken is required\"));\n\n            if (!newToken)\n                return next(new ApiError(422, \"newToken is required\"));\n\n            if (!user.pushTokens.includes(oldToken))\n                return next(new ApiError(422, \"oldToken not exists in this user \"));\n            let tokens = { ..._.without(user.pushTokens, oldToken), newToken };\n            console.log(\"dsd-------------------------------------\")\n            console.log(tokens['1'])\n            //to convert object attributes to array \n            let result = Object.values(tokens);\n\n            console.log(result);\n            user.pushTokens = result;\n            //   user.pushTokens = tokens;\n\n            await user.save();\n\n            res.status(204).end();\n        } catch (err) {\n            next(err)\n        }\n\n    },\n\n\n    async unsubscribe(req, res, next) {\n\n        let user = req.user;\n        user = await User.findById(user.id);\n\n        let token = req.body.token;\n        if (!token)\n            return next(new ApiError(422, \"token is required\"));\n\n        let tokens = _.without(user.pushTokens, token);\n        user.pushTokens = tokens;\n\n        await user.save();\n        //test \n        let newUser = await User.findById(user.id)\n        console.log(newUser.pushTokens)\n        console.log(newUser.pushTokens.length)\n\n\n        res.status(204).end();\n    }\n\n\n}\n"]}