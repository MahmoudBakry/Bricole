{"version":3,"sources":["../../src/controllers/bid.controller.js"],"names":["validateBody","validations","exists","withMessage","createNewBid","req","res","next","validationErrors","array","length","ApiError","bricolId","params","body","bricol","Bid","create","newBid","status","json","retriveAllBidsForBricol","limit","parseInt","query","page","find","populate","skip","sort","creationDate","allDocs","count","send","ApiResponse","Math","ceil","countNumberOfBidToONeBricol","Bricol","findById","bricolDetails","end","bidDetails","bidId","console","log","accepptBid","userId","user","_id","bricoler","save","refuseBid","makeBricolInProgress"],"mappings":"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","file":"bid.controller.js","sourcesContent":["import Bid from '../models/bid.model';\nimport Bricol from '../models/bricole.model';\nimport User from '../models/user.model';\nimport mongoose from 'mongoose';\nimport ApiResponse from '../helpers/ApiResponse';\nimport ApiError from '../helpers/ApiError';\nimport { body, param, validationResult } from 'express-validator/check';\n\nexport default {\n\n    //validation for create new bid\n    validateBody() {\n        let validations = [\n            body(\"cost\").exists().withMessage(\"cost is required\"),\n            body(\"user\").exists().withMessage(\"user is required\"),\n            body('offerDescription').exists().withMessage(\"offerDescription  is required\"),\n            body(\"cost\").exists().withMessage(\"cost is required\"),\n        ];\n        return validations;\n    },\n\n    //create new Bid for specific bricol \n    async createNewBid(req, res, next) {\n        try {\n            const validationErrors = validationResult(req).array();\n            if (validationErrors.length > 0)\n                return next(new ApiError(422, validationErrors));\n\n            let bricolId = req.params.bricolId;\n            req.body.bricol = bricolId;\n            let newBid = await Bid.create(req.body);\n            return res.status(201).json(newBid);\n        } catch (err) {\n            next(err)\n        }\n    },\n\n    //retrive all Bid for one Bricol \n    async retriveAllBidsForBricol(req, res, next) {\n        try {\n            const limit = parseInt(req.query.limit) || 20;\n            const page = req.query.page || 1;\n            let bricolId = req.params.bricolId;\n            let allDocs = await Bid.find({ bricol: bricolId })\n                .populate('user')\n                .populate('bricol').skip((page - 1) * limit)\n                .limit(limit).sort({ creationDate: -1 })\n            let count = await Bid.count({ bricol: bricolId });\n\n            return res.send(new ApiResponse(\n                allDocs,\n                page,\n                Math.ceil(count / limit),\n                limit,\n                count,\n                req\n            ))\n\n        } catch (err) {\n            next(err)\n        }\n    },\n\n    //count number of bids to specific bricol\n    async countNumberOfBidToONeBricol(req, res, next) {\n        try {\n            let bricolId = req.params.bricolId;\n            let bricolDetails = await Bricol.findById(bricolId);\n            if (!bricolDetails)\n                return res.status(404).end();\n            let count = await Bid.count({ bricol: bricolId })\n            return res.status(200).json({ count });\n        } catch (err) {\n            next(err)\n        }\n    },\n\n    //retrive Bid Details \n    async bidDetails(req, res, next) {\n        try {\n            let bidId = req.params.bidId;\n            let bidDetails = await Bid.findById(bidId)\n                .populate('user')\n                .populate('bricol')\n            if (!bidDetails)\n                return next(new ApiError(404));\n            console.log(bidDetails)\n            return res.status(200).json(bidDetails)\n        } catch (err) {\n            next(err)\n        }\n    },\n\n    //acceppt bid \n    async accepptBid(req, res, next) {\n        let bidId = req.params.bidId;\n        let bricolId = req.params.bricolId;\n\n        let bidDetails = await Bid.findById(bidId);\n        if (!bidDetails)\n            return next(new ApiError(404));\n\n        let bricolDetails = await Bricol.findById(bricolId);\n        if (!bricolDetails)\n            return next(new ApiError(404));\n\n        let userId = req.user._id;\n        if (!(userId == bricolDetails.user))\n            return next(new ApiError(403, 'not access to this resource'))\n        //update bricol details \n        bricolDetails.status = \"assigned\";\n        bricolDetails.bricoler = bidDetails.user;\n        await bricolDetails.save();\n        console.log(bricolDetails.bricoler)\n        //update bid \n        bidDetails.status = 'accepted';\n        await bidDetails.save();\n\n        return res.status(204).end();\n\n    },\n\n\n    //refuse bid \n    async refuseBid(req, res, next) {\n        let bidId = req.params.bidId;\n        let bricolId = req.params.bricolId;\n\n        let bidDetails = await Bid.findById(bidId);\n        if (!bidDetails)\n            return next(new ApiError(404));\n\n        let bricolDetails = await Bricol.findById(bricolId);\n        if (!bricolDetails)\n            return next(new ApiError(404));\n\n        let userId = req.user._id;\n        if (!(userId == bricolDetails.user))\n            return next(new ApiError(403, 'not access to this resource'))\n        //update bid \n        bidDetails.status = 'refused';\n        await bidDetails.save();\n\n        return res.status(204).end();\n\n    },\n\n\n    //make bricole in progress  \n    async makeBricolInProgress(req, res, next) {\n        let bidId = req.params.bidId;\n        let bricolId = req.params.bricolId;\n\n        let bidDetails = await Bid.findById(bidId);\n        if (!bidDetails)\n            return next(new ApiError(404));\n\n        let bricolDetails = await Bricol.findById(bricolId);\n        if (!bricolDetails)\n            return next(new ApiError(404));\n\n\n        let userId = req.user._id;\n        console.log(typeof (userId))\n        if (!(userId == bricolDetails.bricoler))\n            return next(new ApiError(403, 'not access to this resource'))\n        //update bricole by bricoler  \n        bricolDetails.status = 'inProgress';\n        await bricolDetails.save();\n\n        return res.status(204).end();\n\n    },\n\n}\n\n\n"]}