{"version":3,"sources":["../../src/models/bricole.model.js"],"names":["BricolSchema","Schema","user","type","Number","ref","required","typeOfBricole","String","enum","default","title","descripption","location","index","bricolerGender","completedOnline","Boolean","job","vehicleToWork","numberOfBricolers","imgs","dueDate","Date","expiredAfter","typeOfexpiredAfter","budget","typeOfBudget","bricoler","status","creationDate","now","set","transform","doc","ret","options","id","_id","__v","autoIncrement","initialize","mongoose","connection","plugin","model","startAt"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,IAAIC,gBAAJ,CAAW;AAC5BC,UAAM;AACFC,cAAMC,MADJ;AAEFC,aAAK,MAFH;AAGFC,kBAAU;AAHR,KADsB;AAM5BC,mBAAe;AACXJ,cAAMK,MADK;AAEXC,cAAM,CAAC,QAAD,EAAW,aAAX,CAFK;AAGXC,iBAAS;AAHE,KANa;AAW5BC,WAAO;AACHR,cAAMK,MADH;AAEHF,kBAAU;AAFP,KAXqB;AAe5BM,kBAAc;AACVT,cAAMK,MADI;AAEVF,kBAAU;AAFA,KAfc;AAmB5BO,cAAU;AACNV,cAAM,CAACC,MAAD,CADA,EACU;AAChBE,kBAAU,IAFJ;AAGNQ,eAAO;AAHD,KAnBkB;AAwB5BC,oBAAgB;AACZZ,cAAMK,MADM;AAEZC,cAAM,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAFM;AAGZH,kBAAU;AAHE,KAxBY;AA6B5BU,qBAAiB;AACbb,cAAMc,OADO;AAEbP,iBAAS;AAFI,KA7BW;AAiC5BQ,SAAK,CAAC;AACFf,cAAMC,MADJ;AAEFC,aAAK;AAFH,KAAD,CAjCuB;AAqC5Bc,mBAAe,CAAC;AACZhB,cAAMK,MADM;AAEZF,kBAAU;AAFE,KAAD,CArCa;AAyC5Bc,uBAAmB;AACfjB,cAAMC;AADS,KAzCS;AA4C5BiB,UAAM,CAAC;AACHlB,cAAMK;AADH,KAAD,CA5CsB;AA+C5Bc,aAAS;AACLnB,cAAMoB,IADD;AAELjB,kBAAU;AAFL,KA/CmB;AAmD5BkB,kBAAc;AACVrB,cAAMC;AADI,KAnDc;AAsD5BqB,wBAAoB;AAChBtB,cAAMK,MADU;AAEhBC,cAAM,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,OAAzB;AAFU,KAtDQ;AA0D5BiB,YAAQ;AACJvB,cAAMC;AADF,KA1DoB;AA6D5BuB,kBAAc;AACVxB,cAAMK,MADI;AAEVC,cAAM,CAAC,OAAD,EAAU,SAAV,EAAqB,QAArB;AAFI,KA7Dc;AAiE5BmB,cAAU;AACNzB,cAAMC,MADA;AAENC,aAAK;AAFC,KAjEkB;AAqE5BwB,YAAQ;AACJ1B,cAAMK,MADF;AAEJC,cAAM,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,EAAuC,MAAvC,CAFF;AAGJC,iBAAS;AAHL,KArEoB;AA0E5BoB,kBAAc;AACV3B,cAAMoB,IADI;AAEVb,iBAASa,KAAKQ;AAFJ;AA1Ec,CAAX,CAArB;;AAgFA/B,aAAagC,GAAb,CAAiB,QAAjB,EAA2B;AACvBC,eAAW,mBAAUC,GAAV,EAAeC,GAAf,EAAoBC,OAApB,EAA6B;AACpCD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;AACA,eAAOH,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACH;AALsB,CAA3B;;AAQAC,gCAAcC,UAAd,CAAyBC,mBAASC,UAAlC;AACA3C,aAAa4C,MAAb,CAAoBJ,gCAAcI,MAAlC,EAA0C;AACtCC,WAAO,QAD+B;AAEtCC,aAAS;AAF6B,CAA1C;;kBAKeJ,mBAASG,KAAT,CAAe,QAAf,EAAyB7C,YAAzB,C","file":"bricole.model.js","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\nimport autoIncrement from 'mongoose-auto-increment';\n\nconst BricolSchema = new Schema({\n    user: {\n        type: Number,\n        ref: 'user',\n        required: true\n    },\n    typeOfBricole: {\n        type: String,\n        enum: ['inCity', 'betweenCity'],\n        default: 'inCity'\n    },\n    title: {\n        type: String,\n        required: true\n    },\n    descripption: {\n        type: String,\n        required: true\n    },\n    location: {\n        type: [Number], // Don't forget [0=>longitude,1=>latitude]\n        required: true,\n        index: '2d'\n    },\n    bricolerGender: {\n        type: String,\n        enum: ['male', 'female', 'both'],\n        required: true\n    },\n    completedOnline: {\n        type: Boolean,\n        default: false\n    },\n    job: [{\n        type: Number,\n        ref: \"job\",\n    }],\n    vehicleToWork: [{\n        type: String,\n        required: true\n    }],\n    numberOfBricolers: {\n        type: Number,\n    },\n    imgs: [{\n        type: String,\n    }],\n    dueDate: {\n        type: Date,\n        required: true\n    },\n    expiredAfter: {\n        type: Number\n    },\n    typeOfexpiredAfter: {\n        type: String,\n        enum: ['day', 'houre', 'week', 'month']\n    },\n    budget: {\n        type: Number\n    },\n    typeOfBudget: {\n        type: String,\n        enum: ['fixed', 'monthly', 'weekly']\n    },\n    bricoler: {\n        type: Number,\n        ref: 'user'\n    },\n    status: {\n        type: String,\n        enum: ['pendding', 'assigned', 'inProgress', 'done'],\n        default: 'pendding'\n    },\n    creationDate: {\n        type: Date,\n        default: Date.now\n    }\n})\n\nBricolSchema.set('toJSON', {\n    transform: function (doc, ret, options) {\n        ret.id = ret._id;\n        delete ret._id;\n        delete ret.__v;\n    }\n});\n\nautoIncrement.initialize(mongoose.connection);\nBricolSchema.plugin(autoIncrement.plugin, {\n    model: 'bricol',\n    startAt: 1,\n});\n\nexport default mongoose.model(\"bricol\", BricolSchema);"]}