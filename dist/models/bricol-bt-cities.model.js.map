{"version":3,"sources":["../../src/models/bricol-bt-cities.model.js"],"names":["BricolBtCitiesSchema","Schema","user","type","Number","ref","required","from","String","to","typeOfBricole","enum","default","title","descripption","bricolerGender","vehicleToWork","numberOfBricolers","imgs","dueDate","Date","budget","tripType","bricoler","status","creationDate","now","set","transform","doc","ret","options","id","_id","__v","autoIncrement","initialize","mongoose","connection","plugin","model","startAt"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,uBAAuB,IAAIC,gBAAJ,CAAW;AACpCC,UAAM;AACFC,cAAMC,MADJ;AAEFC,aAAK,MAFH;AAGFC,kBAAU;AAHR,KAD8B;AAMpCC,UAAO;AACHJ,cAAOK,MADJ;AAEHF,kBAAW;AAFR,KAN6B;AAUpCG,QAAK;AACDN,cAAOK,MADN;AAEDF,kBAAW;AAFV,KAV+B;AAcpCI,mBAAe;AACXP,cAAMK,MADK;AAEXG,cAAM,CAAC,QAAD,EAAW,aAAX,CAFK;AAGXC,iBAAS;AAHE,KAdqB;AAmBpCC,WAAO;AACHV,cAAMK,MADH;AAEHF,kBAAU;AAFP,KAnB6B;AAuBpCQ,kBAAc;AACVX,cAAMK,MADI;AAEVF,kBAAU;AAFA,KAvBsB;AA2BpCS,oBAAgB;AACZZ,cAAMK,MADM;AAEZG,cAAM,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAFM;AAGZL,kBAAU;AAHE,KA3BoB;AAgCpCU,mBAAe,CAAC;AACZb,cAAMK,MADM;AAEZF,kBAAU;AAFE,KAAD,CAhCqB;AAoCpCW,uBAAmB;AACfd,cAAMC;AADS,KApCiB;AAuCpCc,UAAM,CAAC;AACHf,cAAMK;AADH,KAAD,CAvC8B;AA0CpCW,aAAS;AACLhB,cAAMiB,IADD;AAELd,kBAAU;AAFL,KA1C2B;AA8CpCe,YAAQ;AACJlB,cAAMC;AADF,KA9C4B;AAiDpCkB,cAAW;AACPnB,cAAOK,MADA;AAEPG,cAAO,CAAC,SAAD,EAAY,SAAZ,CAFA;AAGPC,iBAAU;AAHH,KAjDyB;AAsDpCW,cAAU;AACNpB,cAAMC,MADA;AAENC,aAAK;AAFC,KAtD0B;AA0DpCmB,YAAQ;AACJrB,cAAMK,MADF;AAEJG,cAAM,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,EAAuC,MAAvC,CAFF;AAGJC,iBAAS;AAHL,KA1D4B;AA+DpCa,kBAAc;AACVtB,cAAMiB,IADI;AAEVR,iBAASQ,KAAKM;AAFJ;AA/DsB,CAAX,CAA7B;;AAqEA1B,qBAAqB2B,GAArB,CAAyB,QAAzB,EAAmC;AAC/BC,eAAW,mBAAUC,GAAV,EAAeC,GAAf,EAAoBC,OAApB,EAA6B;AACpCD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;AACA,eAAOH,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACH;AAL8B,CAAnC;;AAQAC,gCAAcC,UAAd,CAAyBC,mBAASC,UAAlC;AACAtC,qBAAqBuC,MAArB,CAA4BJ,gCAAcI,MAA1C,EAAkD;AAC9CC,WAAO,kBADuC;AAE9CC,aAAS;AAFqC,CAAlD;;kBAKeJ,mBAASG,KAAT,CAAe,kBAAf,EAAmCxC,oBAAnC,C","file":"bricol-bt-cities.model.js","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\nimport autoIncrement from 'mongoose-auto-increment';\n\nconst BricolBtCitiesSchema = new Schema({\n    user: {\n        type: Number,\n        ref: 'user',\n        required: true\n    },\n    from : {\n        type : String, \n        required : true\n    },\n    to : {\n        type : String, \n        required : true\n    },\n    typeOfBricole: {\n        type: String,\n        enum: ['inCity', 'betweenCity'],\n        default: 'betweenCity'\n    },\n    title: {\n        type: String,\n        required: true\n    },\n    descripption: {\n        type: String,\n        required: true\n    },\n    bricolerGender: {\n        type: String,\n        enum: ['male', 'female', 'both'],\n        required: true\n    },\n    vehicleToWork: [{\n        type: String,\n        required: true\n    }],\n    numberOfBricolers: {\n        type: Number,\n    },\n    imgs: [{\n        type: String,\n    }],\n    dueDate: {\n        type: Date,\n        required: true\n    },\n    budget: {\n        type: Number\n    },\n    tripType : {\n        type : String, \n        enum : ['one way', 'two way'],\n        default : 'one way'\n    },\n    bricoler: {\n        type: Number,\n        ref: 'user'\n    },\n    status: {\n        type: String,\n        enum: ['pendding', 'assigned', 'inProgress', 'done'],\n        default: 'pendding'\n    },\n    creationDate: {\n        type: Date,\n        default: Date.now\n    }\n})\n\nBricolBtCitiesSchema.set('toJSON', {\n    transform: function (doc, ret, options) {\n        ret.id = ret._id;\n        delete ret._id;\n        delete ret.__v;\n    }\n});\n\nautoIncrement.initialize(mongoose.connection);\nBricolBtCitiesSchema.plugin(autoIncrement.plugin, {\n    model: 'bricol-bt-cities',\n    startAt: 1,\n});\n\nexport default mongoose.model(\"bricol-bt-cities\", BricolBtCitiesSchema);"]}